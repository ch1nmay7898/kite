import React, { useState } from 'react';
import { Provider } from 'react-redux';
import * as SWRTC from '@andyet/simplewebrtc';
import '../../styles/VoiceRoom.scss';

const API_KEY = '120319f9263e8477a01064c0';
const ROOM_NAME = "document_id";
const ROOM_PASSWORD = 'default';
const CONFIG_URL = `https://api.simplewebrtc.com/config/guest/${API_KEY}`;
const store = SWRTC.createStore();

const RoomConnect = (props) => {
  const [isJoined, setIsJoined] = useState(false);
  return (
    <div className="">
      <Provider store={store}>
        <SWRTC.Provider configUrl={CONFIG_URL} displayName={props.currentUser.displayName}>
          <SWRTC.Connecting>
            <p>Connecting...</p>
          </SWRTC.Connecting>
          <SWRTC.Connected>
            <button className={(isJoined ? "room-connect disconnect" : "room-connect connected")}
              onClick={() => setIsJoined(!isJoined)}>

              {isJoined ?
                <svg style={{marginLeft:'-5px'}}  width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M4.39701 16.3628C5.03165 15.4078 5.88055 14.6133 6.87407 14.0446C9.07482 12.8148 11.4713 11.9878 13.9494 11.6029C17.0135 11.0675 20.2842 11.0084 24.2432 11.4175C26.513 11.6303 28.7572 12.0371 30.9514 12.6334C32.4122 13.0066 33.773 13.6854 34.9452 14.6255C35.9379 15.4858 36.6553 16.6209 37.0102 17.8929C37.3651 19.1648 37.3423 20.5191 36.9446 21.7913C36.8164 22.1632 36.6621 22.5126 36.5152 22.8491L36.4881 22.9067C36.3175 23.3029 36.0295 23.6384 35.6637 23.8671C35.2979 24.0957 34.8723 24.2062 34.4455 24.1833C33.1248 24.1915 31.8024 24.206 30.4783 24.2268L28.1548 24.2443C27.5355 24.2491 26.9181 24.2518 26.3015 24.2668C25.8609 24.2942 25.4248 24.1849 25.0529 23.9535C24.6809 23.7222 24.3912 23.3803 24.2233 22.9743C23.592 21.6801 23.3876 20.2121 23.6392 18.7795C21.3195 18.7268 19.0991 18.6865 16.8625 18.8448C16.8788 18.9401 16.8932 19.0375 16.9035 19.1353C17.0766 20.5305 16.815 21.9527 16.1544 23.2078C15.9787 23.5707 15.7036 23.8773 15.3619 24.091C15.0201 24.3047 14.626 24.4166 14.2264 24.4135L14.0008 24.4153C11.3034 24.4349 8.60554 24.4579 5.9072 24.4844C5.49105 24.4957 5.08309 24.3828 4.73508 24.16C4.38707 23.9372 4.11472 23.6147 3.9526 23.2333C3.41632 22.161 3.17497 20.9606 3.25302 19.754C3.33106 18.5474 3.72574 17.3774 4.39701 16.3628ZM34.8387 22.2944C34.8557 22.2693 34.8692 22.2419 34.8786 22.2131L34.9058 22.1555C35.0458 21.8401 35.1768 21.544 35.277 21.2483C35.8749 19.4826 35.23 17.1744 33.8071 15.9932C32.8211 15.2061 31.6762 14.6405 30.4479 14.3339C28.3512 13.7634 26.207 13.3733 24.0383 13.1678C20.2405 12.7786 17.1189 12.8277 14.2277 13.3389C11.9552 13.6901 9.75717 14.4468 7.73834 15.5729C6.56259 16.2226 5.67544 17.2989 5.26272 18.5764C4.85 19.8539 4.94374 21.2335 5.5243 22.4262C5.66109 22.7069 5.76037 22.7194 5.92036 22.7188C8.62397 22.6891 11.3244 22.6631 14.0216 22.6408L14.2472 22.639C14.3235 22.647 14.4007 22.6277 14.4651 22.5846C14.5295 22.5414 14.5771 22.4771 14.5995 22.403C15.0989 21.4689 15.2949 20.4058 15.1598 19.3646C15.1286 19.1201 15.0851 18.8775 15.0295 18.6377L14.9443 18.2317L14.7558 17.265L15.7342 17.1653C18.5153 16.8911 21.3041 16.9634 24.0175 17.013L25.8029 17.0515L25.5986 18.165C25.5858 18.2482 25.5677 18.3306 25.5445 18.4117C25.1481 19.6733 25.2519 21.0314 25.834 22.201C25.8592 22.3014 25.921 22.388 26.0072 22.4441C26.0935 22.5002 26.1981 22.5216 26.3005 22.5043C26.9313 22.4862 27.5609 22.4825 28.1887 22.481L30.4928 22.4508C31.816 22.4369 33.1426 22.4234 34.4726 22.4103C34.7069 22.416 34.79 22.3682 34.8387 22.2944Z" fill="#E83E31" />
                </svg>
                :
                <svg width="25" height="28" viewBox="0 0 25 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M19.7144 27.1428C18.6631 27.2803 17.5943 27.1647 16.5959 26.8056C14.4053 25.9914 12.3778 24.7872 10.61 23.2505C8.38252 21.3873 6.36292 19.0808 4.25422 15.9909C3.03014 14.2328 1.95706 12.3729 1.04662 10.4312C0.423937 9.15321 0.0752772 7.75751 0.0233154 6.33485C0.0241678 5.09022 0.383563 3.8726 1.05789 2.82971C1.73222 1.78682 2.6925 0.963504 3.82222 0.459651C4.15972 0.320931 4.49722 0.214851 4.82122 0.111491L4.87792 0.0951713C5.25798 -0.0282742 5.66668 -0.0299504 6.04773 0.0903737C6.42877 0.210698 6.76341 0.4471 7.00552 0.767011C7.81012 1.70813 8.62012 2.64653 9.43552 3.58221L10.853 5.23597C11.231 5.67661 11.6063 6.11725 11.9897 6.54973C12.2754 6.84841 12.4627 7.22863 12.526 7.63851C12.5893 8.04839 12.5256 8.46796 12.3434 8.83997C11.8207 10.0946 10.9184 11.1512 9.76492 11.8592C11.1311 13.5537 12.446 15.1694 13.9094 16.6736C13.9661 16.6028 14.0255 16.5321 14.0876 16.4641C14.9581 15.4751 16.1103 14.7807 17.387 14.4758C17.7469 14.3767 18.1276 14.3837 18.4836 14.4961C18.8397 14.6084 19.1563 14.8213 19.3958 15.1096L19.5335 15.2701C21.1787 17.1904 22.8266 19.1089 24.4772 21.0256C24.7368 21.3167 24.9046 21.679 24.9594 22.0664C25.0142 22.4539 24.9535 22.849 24.785 23.2016C24.3599 24.2506 23.667 25.1677 22.7764 25.8599C21.8859 26.5521 20.8295 26.9947 19.7144 27.1428ZM5.44762 1.65645C5.41974 1.65985 5.39247 1.66717 5.36662 1.67821L5.30992 1.69453C5.00482 1.78973 4.71862 1.87949 4.45132 1.99101C2.85562 2.65741 1.63252 4.55053 1.66762 6.30221C1.71381 7.49659 2.01106 8.66749 2.53972 9.73757C3.40912 11.5933 4.4334 13.3713 5.60152 15.0525C7.62652 18.0145 9.54892 20.2204 11.6549 21.9748C13.2749 23.3851 15.1332 24.4907 17.1413 25.2388C18.3065 25.6784 19.5954 25.6466 20.7379 25.1502C21.8804 24.6538 22.7879 23.7313 23.2703 22.576C23.3837 22.304 23.3324 22.2251 23.2352 22.1108C21.5792 20.1923 19.9277 18.2738 18.2807 16.3553L18.143 16.1949C18.1025 16.1352 18.0423 16.0919 17.9732 16.0725C17.9041 16.0531 17.8303 16.0588 17.765 16.0888C16.8101 16.3101 15.9485 16.8288 15.3026 17.5712C15.1506 17.7451 15.0073 17.9267 14.8733 18.1152L14.6411 18.428L14.0795 19.1624L13.418 18.5232C11.5442 16.7008 9.90802 14.6581 8.30152 12.6833L7.24852 11.3805L8.15032 10.8365C8.21621 10.794 8.28475 10.7558 8.35552 10.7222C9.47698 10.224 10.3634 9.30768 10.8287 8.16541C10.8836 8.08516 10.9068 7.98719 10.8938 7.89062C10.8809 7.79405 10.8326 7.70582 10.7585 7.64317C10.3643 7.20253 9.98092 6.75373 9.60022 6.30493L8.18542 4.67293C7.37542 3.73362 6.56362 2.7916 5.75002 1.84685C5.61232 1.67549 5.52862 1.64557 5.44762 1.65645Z" fill="#42AE1D" />
                </svg>

              }
            </button>

            {isJoined ?
              <div>
                <SWRTC.RequestUserMedia audio auto audioTypeHint="speech" />
                <SWRTC.RemoteAudioPlayer />
                <SWRTC.Room name={ROOM_NAME} password={ROOM_PASSWORD} >
                  {roomprops =>
                    <div>
                      {roomprops.peers.map((peer) => <PeerItem peer={peer} />)}
                      <SWRTC.UserControls>
                        {userprops =>
                          <button  onClick={() => { userprops.isMuted ? userprops.unmute() : userprops.mute() }}>
                            {userprops.isMuted ? "Unmute" : "Click to Mute"}
                          </button>
                        }
                      </SWRTC.UserControls>
                    </div>
                  }
                </SWRTC.Room>
              </div>
              : null
            }
          </SWRTC.Connected>
          <SWRTC.Disconnected>
            Lost Connection
          </SWRTC.Disconnected>
        </SWRTC.Provider>
      </Provider>
    </div >
  )
}

function PeerItem(props) {
  return (
    <div className="peer-item" style={{ border: "2px solid black" }}>
      Peer Name: {props.peer.displayName} {props.peer.speaking ? "is speaking" : null}
    </div>
  )
}

export default RoomConnect;