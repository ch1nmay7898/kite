{"version":3,"sources":["components/Loading/loader.svg","components/DocumentCanvas/jk.svg","Pages/Splash/Splash.js","Pages/Login/Login.js","Router/PrivateRoute.js","services/firebase.js","constants/projectTemplates.js","components/Button/Button.js","components/InlineTextEdit/InlineTextEdit.js","Pages/Dashboard/Card.js","Pages/Dashboard/Projects.js","components/MenuBar/LinkSharing.js","components/MenuBar/ShareLink.js","components/MenuBar/MenuBar.js","Pages/Dashboard/Dashboard.js","components/DocumentCanvas/Cards/types/OnlineVideoCard.js","components/DocumentCanvas/Cards/types/PDFCard.js","components/DocumentCanvas/Cards/types/ImagesCard.js","components/DocumentCanvas/Cards/types/FilesCard.js","components/DocumentCanvas/Cards/types/VideoCard.js","components/DocumentCanvas/Cards/types/AudioCard.js","components/DocumentCanvas/Cards/types/LinkCard.js","components/DocumentCanvas/Cards/types/TextCard.js","components/DocumentCanvas/Cards/types/BlankCard.js","components/DocumentCanvas/Cards/GenericCard.js","components/DocumentCanvas/Cards/cardChooser.js","components/DocumentCanvas/Cursor.js","components/DocumentCanvas/CardContainer.js","constants/cardTemplates.js","components/DocumentCanvas/CardManager.js","Pages/Splash/SearchChild.js","components/Loading/Loading.js","components/Loading/index.js","Pages/Document/Document.js","constants/firebaseConstants.js","Pages/Document/InvitationCheck.js","Pages/Errors/ErrorsPage.js","Router/InvitationRoute.js","Router/index.js","services/auth.js","contexts/AppContext.js","App.js","Helpers/serviceWorker.js","index.js"],"names":["module","exports","SplashPage","props","location","useLocation","console","log","pendingAuth","id","to","pathname","isAuth","state","from","LoginPage","path","undefined","authState","isSignedIn","className","src","uiConfig","firebaseAuth","auth","PrivateRoute","children","rest","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","firebaseTIME","ServerValue","TIMESTAMP","firebaseStorage","firebaseFunction","ref","projectTemplates","tester","center","x","y","container","height","window","innerHeight","width","innerWidth","nodes","root","React","memo","handleClick","style","onClick","InlineTextEdit","placeholder","value","text","onChange","onBlur","onSave","addNew","onAddNew","onOpen","card","thumbnailURL","alt","name","event","target","onDelete","Projects","history","useHistory","useState","cards","setCards","userRef","currentUser","uid","useEffect","on","snapshot","val","off","updates","httpsCallable","addMsg","then","result","catch","err","deleteFolderContents","storageRef","listAll","dir","prefixes","length","items","forEach","fileRef","pathToFile","fileName","fullPath","child","delete","folderRef","error","onRename","update","push","projectID","key","access","Math","floor","random","metadata","datecreated","users","Object","entries","map","LinkSharing","url","title","size","ShareList","Passers","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","WhatsappShareButton","separator","WhatsappIcon","LinkedinShareButton","windowWidth","windowHeight","LinkedinIcon","PinterestShareButton","String","PinterestIcon","EmailShareButton","subject","body","EmailIcon","createRoom","a","X_POS","Y_POS","ShareLink","show","setShow","link","setLink","linkType","setLinkType","permission","setPermission","setURL","ChangeRadio","e","LinkType","handleClose","Modal","onHide","Header","closeButton","Title","Body","type","required","htmlFor","encryptPermission","Crypto","toString","custom","term","replacement","replace","RegExp","createPublic","display","Footer","MenuBar","photoURL","displayName","onLogOut","document","Dashboard","signOut","str","typeAPI","changeContent","saveContent","content","lwidth","test","controls","uploading","setUploading","numPages","setNumPages","pageNumber","setPageNumber","pdfjs","GlobalWorkerOptions","workerSrc","version","accept","file","files","contentType","uploadPath","lastModified","requestUpload","uploadStatus","requestDownload","onLoadSuccess","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","photo","index","photos","onClose","currentIndex","views","srcset","srcSet","caption","href","showDownloadProgress","preload","validURL","boxShadow","marginTop","cardSize","showGraphic","maxLine","minLine","changeType","gsap","registerPlugin","Draggable","CardType","BlankCard","TextCard","OnlineVideoCard","VideosCard","ImagesCard","AudioCard","LinkCard","PDFCard","FilesCard","cardChooser","set","concat","opacity","position","create","autoScroll","trigger","onDrag","this","onDragEnd","genericAPI","savePosition","kill","removeCard","parent","aria-hidden","addChild","Cursor","duration","play","flexFlow","justifyContent","require","userSelect","border","fontSize","CardContainer","overflow","zIndex","onDoubleClick","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseMove","persist","containerAPI","sendToDatabase","filter","room","audioCardTemplate","onlineVideoCardTemplate","pdfCardTemplate","fileCardTemplate","linkCardTemplate","imageCardTemplate","offlineVideoCardTemplate","textCardTemplate","blankCardTemplate","cardTemplate","CardManager","isLoaded","setIsLoaded","setContainer","containerRef","useRef","current","setRoom","projectRef","snap","newContent","throttle","newPos","newContainer","changePosition","reparentCard","newParent","currentParent","strategy","stack","poppedID","pop","keys","depthFirstTraversal","newparent","newtype","newCard","newCardKey","resize","newSize","statusCallback","customMetadata","unsubscribe","put","TaskEvent","STATE_CHANGED","nextSnapshot","bytesTransferred","totalBytes","downloadPath","callback","requestedPathRef","getDownloadURL","getMetadata","JSON","parse","stringify","reason","newType","newTypeCard","createUserForProject","t","roomflag","isChild","permissionID","once","exists","ischild","Path","hasChild","resultt","isChildInUsers","flag","Loading","loader","Document","useParams","isloaded","isChildPermission","FIREBASE_CONSTANTS","UI_CONFIG","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","PhoneAuthProvider","callbacks","signInSuccessWithAuthResult","InvitationCheck","decryptPermissionID","decrypt","Utf8","ErrorsPage","InivitationRoute","AppRoutes","user","setAuthState","unregisterAuthObserver","onAuthStateChanged","useAuth","AppContext","createContext","App","Provider","appname","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed2e9769.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.05c141ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/jk.7c73557e.svg\";","import React, { useEffect } from \"react\"\r\nimport { Redirect, useLocation } from \"react-router-dom\"\r\nimport \"../../styles/Splash.scss\"\r\n\r\nexport default function SplashPage(props) {\r\n    const location = useLocation()\r\n    console.log(\"splashpage says: I was consulted\", location)\r\n    return (\r\n        props.pendingAuth ?\r\n            <div id=\"splash\">\r\n                <h1 id=\"splashText\">Welcome to groupthink!</h1>\r\n                <blockquote >Unleash your ideas</blockquote>\r\n            </div>\r\n            : <Redirect\r\n                to={{\r\n                    pathname: props.isAuth ? `/dashboard` : \"/login\",\r\n                    state: { from: location }\r\n                }}\r\n            />\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Redirect, useLocation, useParams } from \"react-router-dom\"\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport \"../../styles/login.scss\";\r\nexport default function LoginPage(props) {\r\n  const location = useLocation()\r\n  let path = \"/dashboard\"\r\n  //----Check if Inivitation Link is there then Redirect to it once Sign IN---\r\n  if(location.state?.from != undefined)\r\n  path = location.state.from.pathname\r\n  return (\r\n    props.authState.isSignedIn ?\r\n      <Redirect\r\n        to={{\r\n          pathname: path,// \"/dashboard\",\r\n          state: { from: location }\r\n        }}\r\n      />\r\n      :\r\n      <div id=\"login\">\r\n        <h1 id=\"title\">Groupthink</h1>\r\n        <div className=\"row align-items-center h-100\">\r\n          <div className=\"col-6\">\r\n            <img src=\"https://picsum.photos/200?random=48\"/>\r\n          </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"landing-subtitle\">\r\n                <b>Unleash your ideas like never before</b>\r\n              </div>\r\n              <div className=\"landing-text\">\r\n                    <em>groupthink</em> is a real-time collaborative platform that brings the power of the web into a new type of document.\r\n                  Gone are the days of static, unidimensional word docs and spreadsheets. <em>groupthink</em> is a live document that seamlessly\r\n                  integrates video, text, images, links, Tweets, Spotify playlists, Charts, and much more in an easy-to-use interface.\r\n              </div>\r\n              <p id=\"sign\">Please sign-in:</p>\r\n              <StyledFirebaseAuth uiConfig={props.uiConfig} firebaseAuth={props.auth()} />\r\n            </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({path, children, isAuth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuth ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\nexport default PrivateRoute;","\r\nimport * as firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\nimport 'firebase/storage';\r\nimport 'firebase/functions'\r\nconst FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyAjOQlUVvfpaPFKw_dsjVF-ZO9xAFFwLJc\",\r\n    authDomain: \"groupthink-fc4b2.firebaseapp.com\",\r\n    databaseURL: \"https://groupthink-fc4b2.firebaseio.com\",\r\n    projectId: \"groupthink-fc4b2\",\r\n    storageBucket: \"groupthink-fc4b2.appspot.com\",\r\n    messagingSenderId: \"268412476509\",\r\n    appId: \"1:268412476509:web:6a00e11a591b5852d4c1b4\",\r\n    measurementId: \"G-94X9F74RYY\"\r\n}\r\n\r\nfirebase.initializeApp(FIREBASE_CONFIG);\r\n\r\nexport const firebaseAuth = firebase.auth;\r\nexport const firebaseDB = firebase.database();\r\nexport const firebaseTIME = firebase.database.ServerValue.TIMESTAMP;\r\nexport const firebaseStorage = firebase.storage;\r\nexport const firebaseStoreRef = firebase.storage().ref();\r\nexport const firebaseFunction = firebase.functions();","/**\r\n * @todo add more templates!\r\n */\r\nconst projectTemplates = {\r\n    tester: {\r\n        center: {\r\n            x: 300,\r\n            y: 300\r\n        },\r\n        container: {\r\n            height: window.innerHeight ,\r\n            width: window.innerWidth\r\n        },\r\n        nodes: {\r\n            root: {\r\n                children: {\r\n                    \"dummy\": 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default projectTemplates;","import React from 'react'\r\n\r\nconst Button = ({handleClick, children , className , style}) => {\r\n  return (\r\n    <button onClick={handleClick} className={className} style={style}>{children}</button>\r\n  )\r\n}\r\nexport default React.memo(Button);\r\n","import React from \"react\"\r\nimport TextareaAutosize from  \"react-textarea-autosize\"\r\nimport \"../../styles/InlineTextEdit.scss\"\r\n\r\nexport default function InlineTextEdit(props) {\r\n    return (\r\n        <TextareaAutosize\r\n            className=\"inline-input\"\r\n            placeholder=\"Add a caption...\"\r\n            value={props.text}\r\n            onChange={props.onChange}\r\n            onBlur={props.onSave}\r\n        />\r\n    )\r\n}","import React from \"react\"\r\nimport Button from \"../../components/Button/Button\"\r\nimport InlineTextEdit from \"../../components/InlineTextEdit/InlineTextEdit\"\r\n\r\nimport \"../../styles/ProjectCard.scss\"\r\nimport \"../../styles/custom.scss\"\r\n\r\nfunction Card(props) {\r\n\r\n    if (props.addNew) {\r\n        return (\r\n            <div className=\"project-card text_card\">\r\n                <Button className=\"\" handleClick={props.onAddNew}>\r\n                    Add New Card\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"project-card img_card\">\r\n                <img\r\n                    onClick={() => props.onOpen(props.id)}\r\n                    src={props.card.thumbnailURL}\r\n                    alt=\"project thumbnail\" />\r\n                <InlineTextEdit\r\n                    className=\"project-card-item\"\r\n                    text={props.card.name}\r\n                    onChange={(event) => props.onChange(props.id, event.target.value)}\r\n                    onSave={() => props.onSave(props.id)} />\r\n                <Button\r\n                    className=\"project-card-item\"\r\n                    handleClick={() => props.onDelete(props.id)}>\r\n                    Delete\r\n            </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default React.memo(Card)","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { firebaseDB, firebaseTIME, firebaseStorage, firebaseFunction } from \"../../services/firebase\";\r\nimport projectTemplates from \"../../constants/projectTemplates\";\r\n\r\nimport Card from \"./Card\";\r\n\r\nimport \"../../styles/Projects.scss\";\r\n/**\r\n * @component\r\n * This Component Deals with All Database & Storage Operation Required In DashBoard Page\r\n * @contains\r\n * @function `onAddNew()` Adds New Project To Database.\r\n * @function `onDelete(id)` Deletes the Corresponding ID from DB & Storage(if Exists) \r\n * @function `onRename(id)` Rename The Projects of Given ID on Database .\r\n * @function `onOpen(id)` Redirects The Page to 'projects/`${id}`'\r\n * @function `onChange(id,text)` Store the text in Current Card State. \r\n * @param {*} props The Props Passed is 'currentUser'\r\n */\r\nexport default function Projects(props) {\r\n    const history = useHistory();\r\n    let [cards, setCards] = useState(null);\r\n\r\n    let userRef = \"users/\" + props.currentUser().uid + \"/projects/\";\r\n\r\n    useEffect(\r\n        () => {\r\n            let ref = firebaseDB.ref(\"users/\" + props.currentUser().uid + \"/projects/\");\r\n            ref.on('value', (snapshot) => {\r\n                console.log(\"triggered listener and updated project list state, snapshot value was\", snapshot.val());\r\n                setCards(snapshot.val());\r\n            })\r\n            return () => ref.off('value');\r\n        }\r\n        , [props])\r\n    /**Adds New Project To Database. */\r\n    var onAddNew = () => {\r\n        console.log(\"clicked add new\")\r\n        const refUsers = firebaseDB.ref().child(userRef);\r\n        const projectID = refUsers.push().key;\r\n        let updates = {};\r\n        updates['creator/' + projectID] = props.currentUser().uid;\r\n        updates[userRef + projectID] = {\r\n            access: 'rw',\r\n            name: \"New Project\",\r\n            thumbnailURL: \"https://picsum.photos/200?random=\" + Math.floor(Math.random() * 100)\r\n        };\r\n        updates['documents/' + projectID] = {\r\n            metadata: {\r\n                name: \"New Project\",\r\n                datecreated: firebaseTIME\r\n            },\r\n            users: { [props.currentUser().uid]: \"rw\" },\r\n            ...projectTemplates.tester\r\n        }\r\n        var addMsg = firebaseFunction.httpsCallable('createNewProject')\r\n        addMsg(updates).then((result) => console.log(result)).catch(err => console.log(err))\r\n    }\r\n    /**\r\n     * Deletes the Corresponding ID from DB & Storage(if Exists)\r\n     * @param {String} id Project's ID\r\n     */\r\n    var onDelete = (id) => {\r\n        console.log(\"about to delete project\", id);\r\n        let updates = {};\r\n        updates[\"users/\" + props.currentUser().uid + \"/projects/\" + id + \"/\"] = null;\r\n        updates[\"documents/\" + id + \"/\"] = null;\r\n        //----Admin Update Method (Cloud Function)----\r\n        var addMsg = firebaseFunction.httpsCallable('createNewProject')\r\n        addMsg(updates).then((result) => console.log(result)).catch(err => console.log(err))\r\n        //--------------------Storage Deletion ------------\r\n        const path = \"root/\" + id + \"/\";\r\n        const deleteFile = (pathToFile, fileName) => {\r\n            const ref = firebaseStorage().ref(pathToFile);\r\n            const childRef = ref.child(fileName);\r\n            childRef.delete().then(console.log(\"File Deleted\"))\r\n        }\r\n        const deleteFolderContents = (path) => {\r\n            console.log(\"Path TO Delete\", path)\r\n            var storageRef = firebaseStorage().ref(path);\r\n            storageRef.listAll()\r\n                .then((dir) => {\r\n                    //-------Files Exist-------\r\n\r\n                    if (dir.prefixes.length > 0 || dir.items.length > 0) {\r\n                        if (dir.items.length > 0) {\r\n                            dir.items.forEach((fileRef) => {\r\n                                deleteFile(storageRef.fullPath, fileRef.name)\r\n                            })\r\n                        }\r\n                        dir.prefixes.forEach(folderRef => {\r\n                            deleteFolderContents(folderRef.fullPath);\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log(\"No Files Exist\")\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        deleteFolderContents(path)\r\n    }\r\n    /**\r\n     * Rename The Projects of Given ID on Database .\r\n     * @param {String} id \r\n     */\r\n    var onRename = (id) => {\r\n        let text = cards[id].name;\r\n        console.log(\"about to rename project\", id, \", changing title to\", text);\r\n        let updates = {};\r\n        updates[userRef + id + \"/name\"] = text;\r\n        updates[\"documents/\" + id + \"/metadata/name\"] = text;\r\n        firebaseDB.ref().update(updates).then(console.log(\"successfully renamed project\", id, \"to\", text))\r\n    }\r\n    /**\r\n     * Redirects The Page to `projects/${id}`\r\n     * @param {String} id \r\n     */\r\n    var onOpen = (id) => {\r\n        console.log(\"attempting to open project\", id);\r\n        history.push(\"/project/\" + id)\r\n    }\r\n    /**\r\n     * Store the text in Current Card State.\r\n     * @param {String} id \r\n     * @param {String} text \r\n     */\r\n    var onChange = (id, text) => {\r\n        console.log(\"un-finalized text change in\", id, \". new text:\", text);\r\n        console.log({ ...cards, [id]: { ...cards[id], name: text } })\r\n        setCards({ ...cards, [id]: { ...cards[id], name: text } });\r\n    }\r\n\r\n    return (\r\n        <div id=\"project-card-container\">\r\n            <Card addNew onAddNew={onAddNew} />\r\n            {cards ?\r\n                Object.entries(cards).map(\r\n                    ([id, card]) => {\r\n                        return <Card\r\n                            key={id}\r\n                            id={id}\r\n                            card={card}\r\n                            onChange={onChange}\r\n                            onSave={onRename}\r\n                            onDelete={onDelete}\r\n                            onOpen={onOpen}\r\n                        />\r\n                    }\r\n                )\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Passers } from \"prop-passer\";\r\nimport {\r\n    FacebookShareButton,\r\n    TwitterShareButton,\r\n    LinkedinShareButton,\r\n    WhatsappShareButton,\r\n    PinterestShareButton,\r\n    EmailShareButton,\r\n  \r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LinkedinIcon,\r\n    WhatsappIcon,\r\n    PinterestIcon,\r\n    EmailIcon\r\n} from \"react-share\";\r\n\r\nconst LinkSharing = (props) => \r\n{\r\n    const { url ,title , size } = props\r\n    const ShareList = Passers({\r\n        url,\r\n        className: \"network__share-button\",\r\n    })\r\n    ({\r\n        className: \"network cursor-pointer hover transition--default\",\r\n        title: `Share ${url}`,\r\n    })(\"li\");\r\n    return(\r\n        <div className=\"social_link\" >\r\n            <ShareList>\r\n                <FacebookShareButton\r\n                    quote={title}\r\n                >\r\n                    <FacebookIcon\r\n                    size={size}\r\n                    />\r\n                </FacebookShareButton>\r\n\r\n                <TwitterShareButton\r\n                    title={title}\r\n                >\r\n                    <TwitterIcon\r\n                    size={size}\r\n                    />\r\n                </TwitterShareButton>\r\n\r\n                <WhatsappShareButton\r\n                    title={title}\r\n                    separator=\":: \"\r\n                >\r\n                    <WhatsappIcon size={size} />\r\n                </WhatsappShareButton>\r\n\r\n                <LinkedinShareButton\r\n                    title={title}\r\n                    windowWidth={750}\r\n                    windowHeight={600}\r\n                >\r\n                    <LinkedinIcon\r\n                    size={size}\r\n\r\n                    />\r\n                </LinkedinShareButton>\r\n\r\n                <PinterestShareButton\r\n                    url={String(window.location)}\r\n                    windowWidth={1000}\r\n                    windowHeight={730}\r\n                >\r\n                    <PinterestIcon size={size} />\r\n                </PinterestShareButton>\r\n\r\n                <EmailShareButton \r\n                    subject=\"Groupthink Web Link\"\r\n                    body={`Here is the link ${url}`}\r\n                >\r\n                    <EmailIcon size={size}/>\r\n                </EmailShareButton>\r\n\r\n            </ShareList>\r\n        </div>\r\n    )\r\n}\r\nexport default LinkSharing;\r\n","import React,{useState} from \"react\"\r\nimport Button from \"../Button/Button\"\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { firebaseDB } from \"../../services/firebase\"\r\nimport { auth } from \"firebase\"\r\nimport LinkSharing from \"./LinkSharing\"\r\nimport * as Crypto from 'crypto-js/aes';\r\nimport \"../../styles/MenuBar.scss\"\r\n\r\n//----Create \"Public\" in Database ----\r\nconst createPublic = (id,permission,uid) =>\r\n{\r\n    \r\n    const path = `documents/${id}/` ;\r\n    const updates = {};\r\n    updates[path + \"/users/public\"] = permission;\r\n    updates[path+\"/room/\"+uid] =  {\r\n        X_POS : 0 ,\r\n        Y_POS : 0\r\n    }\r\n    firebaseDB.ref().update(updates).then(console.log(\"Created Public With Permission\",permission))\r\n}\r\nconst createRoom = async(child,uid) =>\r\n{\r\n    const updates = {};\r\n    updates[`documents/${child}/room/`+uid] ={\r\n        X_POS : 0 ,\r\n        Y_POS : 0\r\n    } \r\n    await firebaseDB.ref().update(updates).then(console.log(\"Created ROOM\")).catch(err=>err)\r\n    \r\n}\r\nconst ShareLink = (props) =>\r\n{\r\n    const [show, setShow] = useState(false);\r\n    const [link  , setLink] = useState(false)\r\n    const [linkType , setLinkType] = useState();\r\n    const [permission , setPermission] = useState();\r\n    const [url , setURL] =useState();\r\n    const handleShow = () =>  setShow(true);\r\n    const title = \"Groupthink Website\"\r\n    function replaceAll(str, term, replacement) {\r\n        return str.replace(new RegExp(escapeRegExp(term), 'g'), replacement);\r\n    }\r\n    function escapeRegExp(string){\r\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    }  \r\n    const openLink = () => {\r\n        if(linkType != undefined && permission !=undefined){ \r\n            setLink(true) \r\n            if(linkType === \"private\")\r\n            {\r\n                createRoom(props.projectID,props.currentUser.uid).then(\"Room Made\").catch(err=>err)\r\n                //-----Encryption-------\r\n                const encryptPermission = Crypto.encrypt(permission,\"grpthink12!\").toString();\r\n                // ------- Used '/' to omit \"/:permissionID\"\r\n                const custom = replaceAll(encryptPermission,'/','$')\r\n                console.log(encryptPermission,permission , custom)\r\n                setURL(String(window.location)+\"/\"+custom)\r\n                \r\n            }\r\n            else\r\n            {\r\n                createPublic(props.projectID,permission,props.currentUser.uid)\r\n                setURL(String(window.location))\r\n            }\r\n        }\r\n        else\r\n        setLink(false)\r\n    }\r\n    const ChangeRadio = (e) =>\r\n    {\r\n        setPermission(e.target.value)\r\n    }\r\n    const LinkType = (e) =>\r\n    {\r\n        setLinkType(e.target.value)\r\n    }\r\n    //----------While Closing Set Everything As At Initial Level----------\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setLink(false);\r\n        setURL(null);\r\n        setLinkType(null);\r\n        setPermission(null);\r\n    }\r\n    return(\r\n        <>\r\n            <Button  handleClick={handleShow}>\r\n                Share\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share Your Project</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Type Of Link To be Shared \r\n                    <br/>\r\n                    <input type=\"radio\" name=\"linkType\" value=\"public\" onChange={e=> LinkType(e)} required={true}/>\r\n                    <label htmlFor=\"male\">Public</label>\r\n                    <input type=\"radio\" name=\"linkType\" value=\"private\" onChange={e=>LinkType(e)} required={true} />\r\n                    <label htmlFor=\"male\">Private </label>\r\n                    <br/>\r\n                    <input type=\"radio\" name=\"options\" value=\"r\" onChange={e=>ChangeRadio(e)} required={true} />\r\n                    <label htmlFor=\"male\">Read Only</label>\r\n                    <input type=\"radio\" name=\"options\" value=\"rw\" onChange={e=>ChangeRadio(e)} required={true}/>\r\n                    <label htmlFor=\"male\">Read and Write </label>\r\n                    <br/>\r\n                    <Button className=\"custom_btn\" handleClick={openLink}>Generate Link</Button>\r\n                    {\r\n                        link ?\r\n                        <div>\r\n                        <br/>\r\n                            Copy Your Link : \r\n                        <br/>\r\n                            <b style={{display:\"inline-flex\"}}>{url}</b>\r\n                        <br/>\r\n                            <LinkSharing url={url} title={title} size = \"2.5rem\"/>\r\n                        </div>\r\n                        :<div/>\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button className=\"custom_btn\" handleClick={handleClose}>Close</Button>\r\n                <Button className=\"custom_btn\" handleClick={handleClose}>Save Changes</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default ShareLink;","import React from \"react\"\r\nimport Button from \"../Button/Button\"\r\nimport ShareLink from \"./ShareLink\"\r\nimport \"../../styles/MenuBar.scss\"\r\nimport { Link } from \"react-router-dom\"\r\nexport default function MenuBar(props) {\r\n    const currentUser = props.currentUser()\r\n    return (\r\n        <div className=\"menu-bar topheader\">\r\n            <div className=\"menu-bar-panel menu-bar-panel-left\">\r\n                <img alt=\"\" className=\"menu-bar-user-profile-picture\" src={currentUser.photoURL} />\r\n                {currentUser.displayName}\r\n            </div>\r\n            <div className=\"menu-bar-panel menu-bar-panel-center\">\r\n                <div className=\"menu-bar-site-title\">\r\n                    groupthink\r\n                </div>\r\n            </div>\r\n            <div >\r\n            <Link to='/dashboard' >Back</Link>\r\n            </div>\r\n            <div className=\"menu-bar-panel menu-bar-panel-right\">\r\n                <Button className=\"logout-button custom_btn\" handleClick={props.onLogOut}>\r\n                    log out\r\n                </Button>\r\n            </div>\r\n            {\r\n                props.document != undefined && props.document === \"rw\"?\r\n                <ShareLink projectID ={props.projectID} className=\"custom_btn\" currentUser={currentUser}/>\r\n                :<div/>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { Redirect, useLocation } from 'react-router-dom'\r\nimport Projects from './Projects'\r\nimport MenuBar from '../../components/MenuBar/MenuBar'\r\n\r\nexport default function Dashboard(props) {\r\n  const location = useLocation()\r\n\r\n  const logout = () => {\r\n    //console.log(\"logout was triggered\")\r\n    props.signOut()\r\n    return (\r\n      <Redirect to={{\r\n        pathname: \"/dashboard\",\r\n        state: { from: location }\r\n      }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MenuBar onLogOut={logout} currentUser={props.currentUser} />\r\n      <Projects currentUser={props.currentUser} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport InlineTextEdit from \"../../../InlineTextEdit/InlineTextEdit\"\r\n/**\r\n * This is an Offline Link Card Shows Videos And Audio Player .\r\n * @param {*} props - Property of File .\r\n * @property `typeAPI` , `content` , `id`\r\n */\r\nconst OnlineVideoCard = (props) => {\r\n    const validURL = (str) => {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n\r\n    const onSave = () => props.typeAPI.saveContent(props.id, { url: props.content.url })\r\n    const onChange = (event) => props.typeAPI.changeContent(props.id, { url: event.target.value })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-node\">\r\n                <InlineTextEdit\r\n                    onChange={(e) => onChange(e)}\r\n                    onSave={onSave}\r\n                    text={props.content?.url || props.content.text}\r\n                    lwidth={\"100px\"}\r\n                />\r\n            </div>\r\n            {\r\n                validURL(props.content?.url) ?\r\n                    <div >\r\n                        <ReactPlayer\r\n                            url={props.content.url}\r\n                            //width={props.CardDetail.size.width}\r\n                            //height={`${heigth}px`}  \r\n                            controls={true}\r\n                        />\r\n                    </div>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default React.memo(OnlineVideoCard);","import React,{useState} from 'react';\r\nimport { Document, Page ,pdfjs} from 'react-pdf';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport 'react-pdf/dist/umd/Page/AnnotationLayer.css';\r\n\r\n/**\r\n * This Card Holds PDF Documents in Project.\r\n * @param {*} props - Property of File .\r\n * @property `typeAPI` , `content` , `id`\r\n */\r\nconst PDFCard = (props) =>{\r\n  const [uploading, setUploading] = useState(false);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const listOfExtension = \"video/* \";\r\n  const requestUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    var metadata = {\r\n        contentType: file.type\r\n    };\r\n    let uploadPath = props.id + \"/\" + file.lastModified\r\n    console.log(\"path sent from audio:\", uploadPath)\r\n    props.typeAPI.requestUpload(uploadPath, file, metadata, (uploadStatus) => {\r\n        console.log(uploadStatus)\r\n        if (uploadStatus === \"complete\") {\r\n            setUploading(\"uploaded\")\r\n            props.typeAPI.requestDownload(\r\n                uploadPath,\r\n                (url, metadata) => props.typeAPI.saveContent(props.id, { url: url, metadata: metadata })\r\n            )\r\n        }\r\n        else {\r\n            setUploading(uploadStatus)\r\n        }\r\n    })\r\n  }\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n  const goToPrevPage = () =>\r\n  {\r\n      if(pageNumber > 1)\r\n      setPageNumber(pageNumber - 1 );\r\n      else\r\n      setPageNumber(numPages - 1)\r\n  }\r\n  const goToNextPage = () =>\r\n  {\r\n      setPageNumber( pageNumber + 1 );\r\n  }  \r\n  return (\r\n    <div>\r\n        {uploading ? \"upload progress: \" + uploading : \"not uploading\"}\r\n        <input\r\n            type=\"file\"\r\n            accept=\"application/pdf,application/vnd.ms-excel\"\r\n            onChange={(e) => requestUpload(e)}\r\n        />\r\n        { props.content.url ?\r\n          <div key={props.content.metadata.name}>\r\n              File Name : {props.content.metadata.name}\r\n              <div key={props.content.metadata.name}>\r\n                <nav>\r\n                  <button onClick={goToPrevPage}>Prev</button>              \r\n                  <button onClick={goToNextPage}>Next</button>              \r\n                </nav>\r\n                <Document\r\n                  file={props.content.url}\r\n                  onLoadSuccess={onDocumentLoadSuccess}\r\n                >\r\n                  <Page pageNumber={pageNumber} />\r\n                </Document>\r\n                <p>Page {pageNumber} of {numPages}</p>\r\n              </div>                                   \r\n          </div>\r\n          : null\r\n        }\r\n    </div>\r\n  )  \r\n}\r\nexport default React.memo(PDFCard);\r\n","import React,{useState,useCallback} from 'react';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\n/**\r\n * This Card Upload Image file & Shows the Image in Galllery\r\n * @param {*} props - Property of File .\r\n * @property `typeAPI` , `content` , `id` \r\n */\r\nconst ImagesCard = (props) =>{\r\n    \r\n  const [uploading, setUploading] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\r\n  const listOfExtension= \"image/*\"\r\n  const requestUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    var metadata = {\r\n        contentType: file.type\r\n    };\r\n    let uploadPath = props.id + \"/\" + file.lastModified\r\n    console.log(\"path sent from audio:\", uploadPath)\r\n    props.typeAPI.requestUpload(uploadPath, file, metadata, (uploadStatus) => {\r\n        console.log(uploadStatus)\r\n        if (uploadStatus === \"complete\") {\r\n            setUploading(\"uploaded\")\r\n            props.typeAPI.requestDownload(\r\n                uploadPath,\r\n                (url, metadata) => props.typeAPI.saveContent(props.id, { url: url, metadata: metadata })\r\n            )\r\n        }\r\n        else {\r\n            setUploading(uploadStatus)\r\n        }\r\n    })\r\n  }\r\n  const openLightbox = useCallback((event, { photo, index }) => {\r\n    setCurrentImage(index);\r\n    setViewerIsOpen(true);\r\n  }, []);\r\n\r\n  const closeLightbox = () => {\r\n    setCurrentImage(0);\r\n    setViewerIsOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n        {uploading ? \"upload progress: \" + uploading : \"not uploading\"}\r\n        <input\r\n            type=\"file\"\r\n            accept={`image/x-png,image/gif,image/jpeg,image/svg,${listOfExtension}`}\r\n            onChange={(e) => requestUpload(e)}\r\n        />\r\n        { props.content.url ?\r\n            <div key={props.content.metadata.name}>\r\n              File Name : {props.content.metadata.name}\r\n              <Gallery photos={[{src:`${props.content.url}` , width:6 , height:7}]} onClick={openLightbox} />\r\n              <ModalGateway>\r\n                {\r\n                  viewerIsOpen ?\r\n                  <Modal onClose={closeLightbox} >\r\n                    <Carousel\r\n                      currentIndex={currentImage}\r\n                      views={[{src:`${props.content.url}` , width:6 , height:7}].map(x => ({\r\n                        ...x,\r\n                        srcset: x.srcSet,\r\n                        caption: x.title\r\n                        }))\r\n                      }\r\n                    />\r\n                  </Modal>\r\n                  : null\r\n                }\r\n              </ModalGateway>\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(ImagesCard);\r\n","import React, { useState} from 'react';\r\n\r\n/**\r\n * This File Input's the Files(e.g. `.odt,.doc,.docx`) And Features to download the file .\r\n * @param {*} props \r\n */\r\nconst FilesCard = (props) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const listOfExtension = \".odt,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n  const requestUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    var metadata = {\r\n        contentType: file.type\r\n    };\r\n    let uploadPath = props.id + \"/\" + file.lastModified\r\n    console.log(\"path sent from audio:\", uploadPath)\r\n    props.typeAPI.requestUpload(uploadPath, file, metadata, (uploadStatus) => {\r\n        console.log(uploadStatus)\r\n        if (uploadStatus === \"complete\") {\r\n            setUploading(\"uploaded\")\r\n            props.typeAPI.requestDownload(\r\n                uploadPath,\r\n                (url, metadata) => props.typeAPI.saveContent(props.id, { url: url, metadata: metadata })\r\n            )\r\n        }\r\n        else {\r\n            setUploading(uploadStatus)\r\n        }\r\n    })\r\n  }\r\n  console.log(\"Metadat FileCard\",props.content.metadata)\r\n  return (\r\n    <div>\r\n        {uploading ? \"upload progress: \" + uploading : \"not uploading\"}\r\n        <input\r\n            type=\"file\"\r\n            accept={listOfExtension}\r\n            onChange={(e) => requestUpload(e)}\r\n        />\r\n        { props.content.url ?\r\n            <div key={props.content.metadata.name}>\r\n                File Name : \r\n                  <a href={props.content.url} target=\"_blank\">{props.content.metadata.name}</a>                   \r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(FilesCard);","import React,{useState} from 'react';\r\nimport ReactPlayer from 'react-player/lazy';\r\n\r\n/**\r\n * This Uploads The Video File in Storage And also can Stream the File.\r\n * @param {*} props - Property of File .\r\n * @property `typeAPI` , `content` , `id`\r\n */\r\nconst VideosCard = (props) =>{\r\n    const [uploading, setUploading] = useState(false);\r\n    const listOfExtension = \"video/* \"\r\n    const requestUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        var metadata = {\r\n            contentType: file.type\r\n        };\r\n        let uploadPath = props.id + \"/\" + file.lastModified\r\n        console.log(\"path sent from audio:\", uploadPath)\r\n        props.typeAPI.requestUpload(uploadPath, file, metadata, (uploadStatus) => {\r\n            console.log(uploadStatus)\r\n            if (uploadStatus === \"complete\") {\r\n                setUploading(\"uploaded\")\r\n                props.typeAPI.requestDownload(\r\n                    uploadPath,\r\n                    (url, metadata) => props.typeAPI.saveContent(props.id, { url: url, metadata: metadata })\r\n                )\r\n            }\r\n            else {\r\n                setUploading(uploadStatus)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {uploading ? \"upload progress: \" + uploading : \"not uploading\"}\r\n            <input\r\n                type=\"file\"\r\n                accept={listOfExtension}\r\n                onChange={(e) => requestUpload(e)}\r\n            />\r\n            { props.content.url ?\r\n                <div key={props.content.metadata.name}>\r\n                    File Name : {props.content.metadata.name}\r\n                    <ReactPlayer\r\n                        controls={true}\r\n                        url={props.content.url}\r\n                    />                    \r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\nexport default React.memo(VideosCard);\r\n","import React, { useState } from 'react';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/src/styles.scss';\r\n\r\n/**\r\n * This File Shows the Input of Audio File .\r\n * @param {*} props \r\n */\r\nconst AudioCard = (props) => {\r\n    let [uploading, setUploading] = useState(false);\r\n\r\n    const listOfExtension = \"audio/* \"\r\n    const requestUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        var metadata = {\r\n            contentType: file.type\r\n        };\r\n        let uploadPath = props.id + \"/\" + file.lastModified\r\n        console.log(\"path sent from audio:\", uploadPath)\r\n        props.typeAPI.requestUpload(uploadPath, file, metadata, (uploadStatus) => {\r\n            console.log(uploadStatus)\r\n            if (uploadStatus === \"complete\") {\r\n                setUploading(\"uploaded\")\r\n                props.typeAPI.requestDownload(\r\n                    uploadPath,\r\n                    (url, metadata) => props.typeAPI.saveContent(props.id, { url: url, metadata: metadata })\r\n                )\r\n            }\r\n            else {\r\n                setUploading(uploadStatus)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {uploading ? \"upload progress: \" + uploading : \"not uploading\"}\r\n            <input\r\n                type=\"file\"\r\n                accept={listOfExtension}\r\n                onChange={(e) => requestUpload(e)}\r\n            />\r\n            { props.content.url ?\r\n                <div key={props.content.metadata.name}>\r\n                    File Name : {props.content.metadata.name}\r\n                    <AudioPlayer\r\n                        src={props.content.url}\r\n                        showDownloadProgress=\"false\"\r\n                        preload=\"metadata\"\r\n                    />\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default React.memo(AudioCard);","import React from 'react';\r\nimport { ReactTinyLink } from 'react-tiny-link'\r\nimport InlineTextEdit from \"../../../InlineTextEdit/InlineTextEdit\"\r\n/**\r\n * This Card Shows The Link's image description in single card\r\n * @param {*} props - Property of File .\r\n * @property `typeAPI` , `content` , `id` \r\n */\r\nconst LinkCard = (props) => \r\n{\r\n    const validURL = (str) => {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n    const onSave = () => validURL(props.content.url) ? props.typeAPI.saveContent(props.id,{ url: props.content.url }) : null\r\n    const onChange = (event) => props.typeAPI.changeContent(props.id,{url:event.target.value})\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"text-node\">\r\n                <InlineTextEdit\r\n                    onChange={(e)=>onChange(e)}\r\n                    onSave={onSave}\r\n                    text={props.content?.url || props.content.text}\r\n                    lwidth={\"100px\"}\r\n                />\r\n            </div>\r\n            {\r\n                validURL(props.content?.url) ? \r\n                <div style={{ boxShadow: \"2px 4px 21px 9px darkgrey\" , marginTop : \"22px\"}}>\r\n                    <ReactTinyLink\r\n                        cardSize=\"small\"\r\n                        showGraphic={true}\r\n                        maxLine={2}\r\n                        minLine={1}\r\n                        url={props.content.url}\r\n                        //width={props.size.width}\r\n                        //height={props.size.height}\r\n                    />\r\n                </div>\r\n                :null\r\n            }\r\n        </>\r\n    )    \r\n    \r\n}\r\nexport default React.memo(LinkCard);","import React from \"react\";\r\nimport InlineTextEdit from \"../../../InlineTextEdit/InlineTextEdit\"\r\n\r\n/**\r\n* This File Saves Text And Shows it from Database .   \r\n* @param {*} props - Property of File .\r\n* @property `typeAPI` , `content` , `id`*/\r\nfunction TextCard(props) {\r\n    const onSave = () => props.typeAPI.saveContent(props.id, { text: props.content.text })\r\n    const onChange = (event) => props.typeAPI.changeContent(props.id, { text: event.target.value })\r\n    return (\r\n        <div className=\"text-node\">\r\n            <InlineTextEdit\r\n                onChange={(e) => onChange(e)}\r\n                onSave={onSave}\r\n                text={props.content.text}\r\n                lwidth={\"100px\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TextCard);","import React from \"react\";\r\nimport Button from \"../../../Button/Button\";\r\n\r\n/**\r\n * @description The BlankCard type provides the UI for a newly-added card. It \r\n * has buttons that let the user select which card type they want to use. Hence,\r\n * it makes use of the changeType function.\r\n * @param {*} props \r\n */\r\nfunction BlankCard(props) {\r\n\r\n    let types = [\"text\", \"image\", \"VideoLink\", \"VideoFile\", \"link\", \"audio\", \"pdf\", \"file\"]\r\n\r\n    return (\r\n        <div className=\"button_link\">\r\n            {types.map((type) =>\r\n                <Button handleClick={() => props.typeAPI.changeType(props.id, type)}>\r\n                    {type}\r\n                </Button>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(BlankCard)","import React, { useEffect } from \"react\";\r\nimport { gsap, Draggable } from \"gsap/all\";\r\n\r\nimport cardChooser from \"./cardChooser\";\r\n\r\nimport \"../../../styles/Cards/GenericCard.scss\";\r\n\r\n/**\r\n * TODO :-\r\n * pass Size of Card So that Player or Card Stuff can be under the cards Size.\r\n * Files Card Having Different Name ...Correction Needed\r\n */\r\n\r\n// register gsap plugin so it doesn't get discarded during tree shake\r\ngsap.registerPlugin(Draggable);\r\n\r\n// wrapper for CardType that abstracts away some functionality common to all CardTypes\r\nfunction GenericCard(props) {\r\n    let CardType = cardChooser(props.card?.type);\r\n    useEffect(\r\n        () => { gsap.set(\"#\".concat(props.id), { opacity: 1, ...props.card.position }) }\r\n        , [props.id, props.card.position])\r\n    useEffect(\r\n        () => {\r\n            // warning: can't use arrow functions here since that messes up the \"this\" binding\r\n            function drag() {\r\n                console.log(\"now that was a drag\");\r\n                this.update();\r\n            }\r\n            function dragStop() {\r\n                props.genericAPI.savePosition(props.id, { x: this.x, y: this.y });\r\n            }\r\n            let y = Draggable.create(\r\n                \"#\".concat(props.id),\r\n                {\r\n                    autoScroll: 1,\r\n                    trigger: \"#handle\".concat(props.id),\r\n                    onDrag: drag,\r\n                    onDragEnd: dragStop\r\n                })\r\n            return () => y[0].kill()\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div id={props.id} className=\"card custom_card border-0\" style={{ width: 350, height: 200, position: \"absolute\", opacity: 0 }}>\r\n            <div id={\"handle\".concat(props.id)} className=\"card-handle card-title-bar\">\r\n                <button className=\"absolute delete_btn wh-20p rounded-circle\"\r\n                    onClick={() => props.genericAPI.removeCard(props.id, \"recursive\", props.card.parent)}>\r\n                    X\r\n                </button>\r\n                <button className=\"absolute lock_btn wh-20p rounded-circle\">\r\n                    <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button className=\"absolute add_btn wh-20p\"\r\n                    onClick={() => props.genericAPI.addChild(\r\n                        {\r\n                            x: props.card.position.x + 100,\r\n                            y: props.card.position.y + 100\r\n                        },\r\n                        {\r\n                            width: 300,\r\n                            height: 300,\r\n                        },\r\n                        props.id,\r\n                        \"blank\"\r\n                    )}>\r\n                    <span className=\"rounded-circle\">+</span>\r\n                </button>\r\n            </div>\r\n            <CardType typeAPI={props.typeAPI} content={props.card.content} id={props.id} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GenericCard);","import OnlineVideoCard from \"./types/OnlineVideoCard\";\r\nimport PDFCard from \"./types/PDFCard\";\r\nimport ImagesCard from \"./types/ImagesCard\";\r\nimport FilesCard from \"./types/FilesCard\";\r\nimport VideosCard from \"./types/VideoCard\";\r\nimport AudioCard from \"./types/AudioCard\";\r\nimport LinkCard from \"./types/LinkCard\";\r\nimport TextCard from \"./types/TextCard\";\r\nimport BlankCard from \"./types/BlankCard\";\r\n\r\n// returns a CardType component based on \"type\"\r\nexport default function cardChooser(type) {\r\n    console.log(type)\r\n    //return AudioCard\r\n    switch (type) {\r\n        case \"blank\":\r\n            return BlankCard;\r\n        case \"text\":\r\n            return TextCard;\r\n        case \"VideoLink\":\r\n            return OnlineVideoCard;\r\n        case \"VideoFile\":\r\n            return VideosCard;\r\n        case \"image\":\r\n            return ImagesCard;\r\n        case \"audio\":\r\n            return AudioCard;\r\n        case \"link\":\r\n            return LinkCard;\r\n        case \"pdf\":\r\n            return PDFCard;\r\n        case \"file\":\r\n            return FilesCard;\r\n        default:\r\n            return BlankCard;\r\n    }\r\n}","import React from \"react\";\r\nimport gsap from \"gsap\"\r\n\r\nexport default function Cursor(props) {\r\n    let animation = gsap.to(\"#\".concat(props.id), { x: props.x, y: props.y, duration: 0.8 });\r\n    animation.play();\r\n    console.log(\"props\", props.x)\r\n    return (\r\n        <div id={props.id} style={{\r\n            position: \"absolute\",\r\n            width: 40,\r\n            height: 40,\r\n            display: \"flex\",\r\n            flexFlow: \"column nowrap\",\r\n            justifyContent: \"space-between\",\r\n        }}>\r\n            <img alt=\"cursor\" src={require(\"./jk.svg\")} width=\"25px\" height=\"25px\" style={{ userSelect: \"none\" }} />\r\n            <div style={{ border: \"1px dashed black\", height: 10, fontSize: 8 }}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport GenericCard from \"./Cards/GenericCard\"\r\nimport Cursor from \"./Cursor\";\r\n/**\r\n * props:\r\n * \r\n * @param {*} props \r\n * \r\n */\r\nexport default function CardContainer(props) {\r\n    //console.log(props.currentUser().displayName)\r\n    return (\r\n        <div className=\"card-container w-100 main_card\"\r\n            style={{ overflow: \"scroll\", position: \"absolute\", zIndex: 1 }}>\r\n            <div className=\"container-filler\"\r\n                style={{ ...props.container, position: \"absolute\", zIndex: 9999999 }}\r\n                onDoubleClick={(e) => {\r\n                    // gets the coordinates of the double click relative to \"filler\"\r\n                    var rect = e.target.getBoundingClientRect();\r\n                    var x = Math.floor(e.clientX - rect.left);\r\n                    var y = Math.floor(e.clientY - rect.top);\r\n                    console.log(\"double click at\", x, \",\", y);\r\n                    props.genericAPI.addChild({ x: x, y: y }, { width: 200, height: 300 })\r\n                }}\r\n                onMouseMove={(event) => {\r\n                    console.log(\"triggered mouse move\")\r\n                    event.persist(); props.containerAPI.sendToDatabase(event);\r\n                }}\r\n            >\r\n                {\r\n                    props.cards ? Object.entries(props.cards).filter(([id, card]) => id && id !== \"root\").map(\r\n                        ([id, card]) => {\r\n                            return (\r\n                                <GenericCard\r\n                                    key={id}\r\n                                    id={id}\r\n                                    card={card}\r\n                                    genericAPI={props.genericAPI}\r\n                                    typeAPI={props.typeAPI}\r\n                                />\r\n                            )\r\n                        }\r\n                    ) : <p>Double Click to Add a Card</p>\r\n                }\r\n                {\r\n                    props.room != undefined ?\r\n                        Object.entries(props.room)\r\n                            .filter(([id, position]) =>\r\n                                id !== props.currentUser().uid)\r\n                            .map(([id, position]) =>\r\n                                <Cursor key={props.currentUser().uid}\r\n                                    id={props.currentUser().uid}\r\n                                    name={props.currentUser().displayName}\r\n                                    x={position.x}\r\n                                    y={position.y} />)\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","/**\r\n * This Template Return the Properties of Given Type .\r\n * @param {String} type - the type of card which need to be return.\r\n * \r\n * Every Card Type Has the Following properties:-\r\n * @property {String} `type` \r\n * @property {{width: number, height: number}} `size` - Contains 2 property. Height and Width.\r\n * @property {String} `Content` - The Contant of card at initial Render.\r\n */\r\nconst cardTemplate = (type) =>\r\n{\r\n    switch (type) {\r\n        case \"text\":\r\n            return textCardTemplate;\r\n        case \"VideoLink\":\r\n            return onlineVideoCardTemplate;\r\n        case \"VideoFile\":\r\n            return offlineVideoCardTemplate;\r\n        case \"image\":\r\n            return imageCardTemplate;\r\n        case \"audio\":\r\n            return audioCardTemplate;\r\n        case \"link\":\r\n            return linkCardTemplate;\r\n        case \"pdf\":\r\n            return pdfCardTemplate;\r\n        case \"file\":\r\n            return fileCardTemplate;\r\n        default:\r\n            return blankCardTemplate;\r\n    }\r\n}\r\n\r\nconst audioCardTemplate = {\r\n    type: 'audio',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a Audio Card`\r\n    }\r\n}\r\nconst onlineVideoCardTemplate = {\r\n    type: 'VideoLink',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a Video Link  Card`\r\n    }\r\n}\r\nconst pdfCardTemplate = {\r\n    type: 'pdf',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a pdf Card`\r\n    }\r\n}\r\nconst fileCardTemplate = {\r\n    type: 'file',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a file Card`\r\n    }\r\n}\r\nconst linkCardTemplate = {\r\n    type: 'link',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a link Card`\r\n    }\r\n}\r\nconst imageCardTemplate = {\r\n    type: 'image',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a image Card`\r\n    }\r\n}\r\nconst offlineVideoCardTemplate = {\r\n    type: 'VideoFile',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a VideoFile Card`\r\n    }\r\n}\r\nconst textCardTemplate = {\r\n    type: 'text',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a text Card`\r\n    }\r\n}\r\nconst blankCardTemplate = {\r\n    type: 'text',\r\n    size: {\r\n        height : 300,\r\n        width : 400\r\n    },\r\n    content: {\r\n        text: `This is a text Card`\r\n    }\r\n}\r\n\r\nexport default cardTemplate;","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport CardContainer from \"./CardContainer\";\r\nimport throttle from 'lodash.throttle';\r\nimport { firebaseDB, firebaseStorage } from \"../../services/firebase\";\r\nimport cardTemplate from \"../../constants/cardTemplates\";\r\n/**\r\n * Business logic for all canvas operations. Provides and implements the TypeAPI and GenericAPI\r\n * @property {state} cards - stores the local state information for all the cards\r\n * @property {state} container - stores the width and height of the container  \r\n * @param {*} props \r\n */\r\nexport default function CardManager(props) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    // store container-related state\r\n    const [container, setContainer] = useState({ width: 600, height: 800 });\r\n    const containerRef = useRef({});\r\n    containerRef.current = container;\r\n\r\n    //\r\n    const [room , setRoom] = useState();\r\n    // store card-related state\r\n    const [cards, setCards] = useState({});\r\n\r\n    // \"root/documents/projectID/nodes\" reference in firebase db\r\n    const projectRef = firebaseDB.ref(\"documents/\" + props.projectID + \"/nodes\");\r\n\r\n    // get initial firebase state and subscribe to changes\r\n    // unsubscribe before unmount\r\n    useEffect(() => {\r\n        // TODO: split the nodes listener into separate ones for \"child_added\", \r\n        // \"child_removed\" and so on reduce size of snapshot received\r\n        let projectRef = firebaseDB.ref(\"documents/\" + props.projectID);\r\n        projectRef.child(\"nodes\").on(\"value\", (snapshot) => {\r\n            console.log(\"triggered node listener, received payload\", snapshot.val());\r\n            setCards(snapshot.val());\r\n        });\r\n        projectRef.child(\"center\").on(\"value\", (snapshot) => {\r\n            console.log(\"triggered center location listener, received payload\", snapshot.val());\r\n            // setDocCenter(snapshot.val());\r\n        });\r\n        projectRef.child(\"container\").on(\"value\", (snapshot) => {\r\n            console.log(\"triggered container size listener, received payload\", snapshot.val());\r\n            setContainer(snapshot.val());\r\n        });\r\n        projectRef.child(\"room\").on(\"value\",(snap)=>{\r\n            console.log(\"Room Details Triggered recieved payload\", snap.val());\r\n            setRoom(snap.val());\r\n        })\r\n        setIsLoaded(true)\r\n        return () => {\r\n            projectRef.child(\"nodes\").off();\r\n            projectRef.child(\"center\").off();\r\n            projectRef.child(\"container\").off();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    /**\r\n     * add a new card with the specified type, position, and parent\r\n     * @param {{x: number, y: number}} position - the initial position of the card\r\n     * @param {{width: number, height: number}} size - the initial size of the card\r\n     * @param {string} newparent - (optional) the id of the parent card. default: \"root\"\r\n     * @param {string} newtype - (optional) the card type (e.g. \"audio\", \"image\", \"text\"). default: \"blank\"\r\n     */\r\n    const addCard = (position, size, newparent, newtype) => {\r\n        // schema for new card\r\n        let parent = newparent || \"root\"\r\n        let type = newtype || \"blank\"\r\n        const newCard = {\r\n            type: type,\r\n            size: size,\r\n            position: position,\r\n            content: {\r\n                text: `This is a ${type} Card`\r\n            },\r\n            parent: parent\r\n        }\r\n\r\n        // create new key for child in \".../nodes\"\r\n        let newCardKey = projectRef.push().key;\r\n\r\n        // use that key to \r\n        // a) push the new card schema \r\n        // b) update the \"children\" property of parent\r\n        let updates = {};\r\n        updates[parent + \"/children/\" + newCardKey] = 1;\r\n        updates[newCardKey] = newCard;\r\n        projectRef.update(updates).then(console.log(\"Added a new child\", newCardKey, \"under\", parent));\r\n\r\n        // update local state\r\n        setCards({\r\n            ...cards,\r\n            [newCardKey]: newCard,\r\n            [parent]: {\r\n                ...cards[parent],\r\n                children: {\r\n                    ...cards[parent][\"children\"],\r\n                    [newCardKey]: 1\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * remove a card or a subtree from the document\r\n     * @param {string} id - the card on which to perform the operaiton\r\n     * @param {string} strategy - the deletion strategy \"recursive\" or \"reparent\"\r\n     * @param {string} newParent - !only used with the `reparent` strategy! the card \r\n     * that will now become the parent of the immediate descendents of the deleted card\r\n     * @todo remove all storage files associated with the deleted cards\r\n     */\r\n    const removeCard = (id, strategy, newParent) => {\r\n        const updates = {};\r\n        updates[id] = null;\r\n        updates[cards[id][\"parent\"] + \"/children/\" + id] = null;\r\n\r\n        /**\r\n         * do a depth-first traversal of the subtree rooted at `id` and add\r\n         * every element to updates{} for removal\r\n         * @param {Array} stack \r\n         */\r\n        const depthFirstTraversal = (stack) => {\r\n            while (stack.length > 0) {\r\n                let poppedID = stack.pop();\r\n                updates[poppedID] = null;\r\n                if(cards[poppedID][\"children\"])\r\n                stack.concat(Object.keys(cards[poppedID][\"children\"]))\r\n            }\r\n        }\r\n\r\n        switch (strategy) {\r\n            case \"recursive\":\r\n                if(cards[id][\"children\"])\r\n                depthFirstTraversal(Object.keys(cards[id][\"children\"]));\r\n                break;\r\n            case \"reparent\":\r\n                Object.keys(cards[id][\"children\"])\r\n                    .forEach(child => updates[child + \"/parent\"] = newParent);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        projectRef.update(updates).then(console.log(\"deleted\", id, \"successfully\"))\r\n    }\r\n\r\n    /**\r\n     * update local state during card drag\r\n     * @param {string} id - the card for which to perform the operation\r\n     * @param {{x: number, y: number}} newPos - the new position\r\n     */\r\n    const changePosition = (id, newPos) => {\r\n        setCards({ ...cards, [id]: { ...cards[id], position: newPos } });\r\n    }\r\n\r\n    /**\r\n     * update firebase state after drag end. increase container size if needed.\r\n     * @param {string} id - the card for which to perform the operation\r\n     * @param {{x: number, y: number}} newPos - the new position\r\n     * @todo take card size into account when increasing container size\r\n     */\r\n    const savePosition = (id, newPos) => {\r\n        let updates = {};\r\n        let newContainer = { width: containerRef.current.width, height: containerRef.current.height }\r\n\r\n        let projectRef = firebaseDB.ref(\"documents/\" + props.projectID);\r\n        if (newPos.x > containerRef.current.width) {\r\n            console.log(\"x\", newPos.x, \"was greater than width\", containerRef.current)\r\n            newContainer.width = newPos.x + 300;\r\n        }\r\n        if (newPos.y > containerRef.current.height) {\r\n            console.log(\"y\", newPos.y, \"was greater than height\", container.current)\r\n            newContainer.height = newPos.y + 300;\r\n        }\r\n        updates[\"nodes/\" + id + \"/position/\"] = newPos;\r\n        if (newContainer) {\r\n            updates[\"container/\"] = newContainer\r\n        }\r\n\r\n        console.log(\"newcontainer: \", newContainer, \"old container: \", containerRef.current)\r\n\r\n        projectRef.update(updates)\r\n            .then(console.log(\"set new position for\", id, \"to\", newPos, \"\\nresized container to\", newContainer));\r\n    }\r\n\r\n    /**\r\n     * update card size locally and in firebase\r\n     * @param {string} id - the card for which to perform the operation \r\n     * @param {{width: number, height: number}} newSize - the new size\r\n     * @todo split into local and remote versions (change/save)\r\n     */\r\n    const resize = (id, newSize) => {\r\n        setCards({ ...cards, [id]: { ...cards[id], size: newSize } });\r\n        projectRef.child(id).child(\"size\").set(newSize).then(console.log(\"set new size for\", id, \"to\", newSize));\r\n    }\r\n\r\n    /**\r\n     * update card content locally\r\n     * @param {string} id - the card for which to perform the operation \r\n     * @param {object} newContent - the new content to push to local state\r\n     */\r\n    const changeContent = (id, newContent) => {\r\n        console.log(\"triggered local content change on\", id)\r\n        setCards({ ...cards, [id]: { ...cards[id], content: newContent } });\r\n    }\r\n\r\n    /** \r\n     * push card content to firebase (replaces any currently existing content for that card)\r\n     * @param {string} id - the card for which to perform the operation \r\n     * @param {object} newContent - the new content to push to database\r\n    */\r\n    const saveContent = (id, newContent) => {\r\n        changeContent(id, newContent);\r\n        projectRef.child(id).child(\"content\").set(newContent)\r\n            .then(console.log(\"saved new content for\", id));\r\n    }\r\n    /**\r\n     * Changes the type of card to dzired type .  \r\n     * @param {String} id - the card for which to perform the operation\r\n     * @param {String} newType - the newType which is going to be changed.\r\n     */\r\n    const changeType = (id, newType) => {\r\n        const newTypeCard = cardTemplate(newType); //type,size,content\r\n        setCards({ ...cards, \r\n            [id]: { \r\n                ...cards[id], \r\n                type: newTypeCard.type,\r\n                size: newTypeCard.size,\r\n                content : newTypeCard.content \r\n            } \r\n        });\r\n        const updates = {};\r\n        updates[id+'/type'] = newTypeCard.type;\r\n        updates[id+'/size'] = newTypeCard.size;\r\n        updates[id+'/content'] = newTypeCard.content;\r\n        projectRef.update(updates).then(console.log(\"Set new type for\",id ,\"to \\n\",newTypeCard)).catch(err=>err);\r\n        //projectRef.child(id).child(\"type\").set(newType).then(console.log(\"set new type for\", id, \"to\", newType));\r\n    }\r\n    /** \r\n     * change the parent of card id to card newParent\r\n     * @param {string} id - the card for which to perform the operation \r\n     * @param {string} newParent - the id of the card's new parent\r\n     * @todo implement local state change in addition to firebase change\r\n     * */\r\n    const reparentCard = (id, newParent) => {\r\n        let updates = {};\r\n        let currentParent = cards[id][\"parent\"];\r\n        updates[id + \"/parent\"] = newParent;\r\n        updates[currentParent + \"/children/\" + id] = null;\r\n        updates[newParent + \"/children/\" + id] = 1;\r\n        projectRef.update(updates)\r\n            .then(console.log(\"successfully changed the parent of\", id, \"from\", currentParent, \"to\", newParent))\r\n            .catch(console.log(\"error reparenting\"));\r\n    }\r\n\r\n    /**\r\n     * uploads `file` to `path` in the storage bucket\r\n     * @param {string} uploadPath - a path relative to projectID/\r\n     * @param {blob} file - the file to be uploaded\r\n     * @param {object} metadata - the metadata object associated with the file\r\n     * @param {function(number)} statusCallback - a callback that receives a number [0, 100] indicating upload progress\r\n     */\r\n    const requestUpload = (uploadPath, file, metadata, statusCallback) => {\r\n        let custom = {\r\n            ...metadata,\r\n            customMetadata: {\r\n                [props.currentUser().uid]: props.permission\r\n            }\r\n        }\r\n\r\n        console.log(\"metadata sent was\", custom)\r\n        const path = \"root/\" + props.projectID + \"/\" + uploadPath;\r\n        let requestedPathRef = firebaseStorage().ref(path);\r\n        let unsubscribe = requestedPathRef.put(file, custom)\r\n            .on(firebaseStorage.TaskEvent.STATE_CHANGED,\r\n                (nextSnapshot) => statusCallback(nextSnapshot.bytesTransferred / nextSnapshot.totalBytes * 100), // on upload progress\r\n                null, // error handling -- nonexistent!\r\n                () => { console.log(); statusCallback(\"complete\"); unsubscribe(); } // on completion\r\n            )\r\n    }\r\n\r\n    /**\r\n     * get a file and associated metadata (sans permissions) from the storage bucket\r\n     * @param {string} downloadPath - - a path relative to projectID/\r\n     * @param {function(string, object)} callback - a function that takes (`downloadURL`, `metadata`) as arguments\r\n     */\r\n    const requestDownload = (downloadPath, callback) => {\r\n        const path = \"root/\" + props.projectID + \"/\" + downloadPath;\r\n        let requestedPathRef = firebaseStorage().ref(path)\r\n        requestedPathRef.getDownloadURL()\r\n            .then((url) => {\r\n                requestedPathRef.getMetadata()\r\n                    .then((metadata) => callback(url, JSON.parse(JSON.stringify(metadata))))\r\n                    .catch((reason) => console.log(\"failed to fetch metadata for\", path, \"because\", reason))\r\n            })\r\n            .catch((reason) => console.log(\"failed to fetch download URL for\", path, \"because\", reason))\r\n    }\r\n    /**\r\n     * This Function Updates Mouse X and Y Position to Database \r\n     */\r\n    const sendToDatabase = useCallback(throttle(\r\n        (event) => {\r\n          if (room != undefined) {\r\n            //console.log(room[props.currentUser().uid],event.clientX , event.clientY)\r\n            firebaseDB.ref(\"documents/\" + props.projectID+\"/room/\").child(props.currentUser().uid)\r\n              .set({ x: event.clientX, y: event.clientY })\r\n          }\r\n        },\r\n        100), [room])\r\n    /**\r\n     * bundling card api methods for ease of transmission \r\n     */\r\n    let genericAPI = {\r\n        savePosition: savePosition,\r\n        changePosition: changePosition,\r\n        reparentCard: reparentCard,\r\n        removeCard: removeCard,\r\n        addChild: addCard,\r\n        resize: resize\r\n    }\r\n\r\n    let typeAPI = {\r\n        saveContent: saveContent,\r\n        changeContent: changeContent,\r\n        requestUpload: requestUpload,\r\n        requestDownload: requestDownload,\r\n        changeType : changeType\r\n    }\r\n\r\n    const containerAPI = {\r\n        sendToDatabase :  sendToDatabase\r\n    }\r\n    return (\r\n        isLoaded ?\r\n            <CardContainer\r\n                container={container}\r\n                cards={cards}\r\n                genericAPI={genericAPI}\r\n                typeAPI={typeAPI}\r\n                permission={props.permission}\r\n                currentUser={props.currentUser}\r\n                containerAPI = {containerAPI}\r\n                room={room}\r\n            />\r\n            :\r\n            <div>\r\n                Loading...\r\n            </div>\r\n\r\n    )\r\n}","import { firebaseDB, firebaseFunction } from \"../../services/firebase\";\r\nimport { auth } from \"firebase\"\r\n\r\n/**\r\n * This File Search Child For Route Path =\"/project/:projectID\" & Inivitation Link\r\n */\r\nconst createUserForProject =async(path,child,permission,uid)=>{ \r\n    const updates = {}\r\n    updates[path+uid]=permission;\r\n    updates[`documents/${child}/room/`+uid] ={\r\n        X_POS : 0 ,\r\n        Y_POS : 0\r\n    }\r\n    if(permission === \"r\" || permission === \"rw\")\r\n    {\r\n        //const updatePrivate = await firebaseDB.ref().update(updates).then(()=>{return true}).catch((err)=>{console.log(err); return false});\r\n        var addMsg = firebaseFunction.httpsCallable('createNewProject')\r\n        var t = addMsg(updates).then((result) =>{return true}).catch(err => console.log(err))\r\n        console.log(\"user Created\", t)\r\n        \r\n        return t;\r\n    }\r\n    else\r\n    return false;    \r\n}\r\nconst createRoom = async(child,uid) =>\r\n{\r\n    const updates = {};\r\n    updates[`documents/${child}/room/`+uid] ={\r\n        X_POS : 0 ,\r\n        Y_POS : 0\r\n    }\r\n    // var addMsg = firebaseFunction.httpsCallable('createNewProject')\r\n    // addMsg(updates).then((result) =>{ return 'passed'}).catch(err => console.log(err))\r\n    // console.log(\"user Created\")    \r\n    // //return t;\r\n    const roomflag = await firebaseDB.ref().update(updates).then(console.log(\"Created ROOM\")).catch(err=>err)\r\n    return roomflag\r\n}\r\nconst isChild = async (child,permissionID) => {\r\n    const uid = auth().currentUser?.uid\r\n    const ischild = await firebaseDB.ref(`documents/${child}/`).once('value').then(snap => snap.exists()).catch(err=>err)\r\n    const Path = `documents/${child}/users/`;\r\n    const isChildInUsers = await firebaseDB.ref(Path).once('value').then((snap)=>{ \r\n        //---False Project Id\r\n        if(!ischild)\r\n        {\r\n            return null\r\n        }\r\n        //---Internal Check----\r\n        if(snap.hasChild(uid))\r\n        {\r\n            //----Returns The Permission---\r\n            \r\n            return snap.child(uid).val()\r\n        }\r\n        if(snap.hasChild(\"public\"))\r\n        {\r\n            //---Return Permission For Public----\r\n            const test = createRoom(child,uid).then(resultt=>resultt).catch(err=>err)\r\n            console.log(test)\r\n            return snap.child(\"public\").val()\r\n            \r\n        }\r\n        else\r\n        {\r\n            return null\r\n        }\r\n    })\r\n    .catch(err=>err)\r\n    \r\n    //------Privately Send Invitation Params---\r\n    if(permissionID != undefined)\r\n    {\r\n        //-----Create This To Access Project-----\r\n        console.log(permissionID)\r\n        const flag = await createUserForProject(Path,child,permissionID,uid)\r\n        return   flag;\r\n    }\r\n    else\r\n    return  isChildInUsers ;\r\n}\r\nexport default isChild; \r\n","import React from 'react'\r\nimport loader from './loader.svg';\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <img src={loader} className=\"loader\" alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import Loading from './Loading';\r\nimport './loader.scss'\r\nexport default Loading;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useLocation, Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport MenuBar from \"../../components/MenuBar/MenuBar\";\r\nimport CardManager from \"../../components/DocumentCanvas/CardManager\";\r\nimport isChild from \"../Splash/SearchChild\";\r\nimport Loading from \"../../components/Loading\";\r\nexport default function Document(props) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { projectID } = useParams();\r\n  const [isloaded, setIsLoaded] = useState(false);\r\n  const [permission, setPermission] = useState(null);\r\n  //console.log(projectID);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const isChildPermission =await isChild(projectID);\r\n      console.log(\"Permission\",isChildPermission)\r\n      setIsLoaded(true);\r\n\r\n      //---Check For Child Validation--\r\n      if (isChildPermission == null) {\r\n        history.push('/dashboard')\r\n      }\r\n      //---Permission Associated -----\r\n      else {\r\n        setPermission(isChildPermission);\r\n      }\r\n    })()\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    props.signOut()\r\n    return (\r\n      <Redirect to={{\r\n        pathname: \"/login\",\r\n        state: { from: location }\r\n      }}\r\n      />\r\n    )\r\n  }\r\n  if (!isloaded) {\r\n    return <Loading />\r\n  }\r\n  return (\r\n    <div>\r\n      <MenuBar style={{ position: \"absolute\", zIndex: 0 }}\r\n        onLogOut={logout} currentUser={props.currentUser} document={permission} projectID={projectID} />\r\n      {\r\n        permission != null ?\r\n          <CardManager\r\n            projectID={projectID}\r\n            currentUser={props.currentUser}\r\n            permission={permission}\r\n          />\r\n          : <div></div>\r\n      }\r\n    </div>\r\n  );\r\n}","import { firebaseAuth } from \"../services/firebase\";\r\n\r\nexport const FIREBASE_CONSTANTS = {\r\n    UI_CONFIG: {\r\n        signInFlow: 'popup',\r\n        // signInSuccessUrl: APP_CONSTANTS.URLS.DASHBOARD_URL,\r\n        signInOptions: [\r\n            firebaseAuth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebaseAuth.FacebookAuthProvider.PROVIDER_ID,\r\n            firebaseAuth.EmailAuthProvider.PROVIDER_ID,\r\n            firebaseAuth.PhoneAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccessWithAuthResult: () => false\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport isChild from \"../Splash/SearchChild\";\r\nimport * as Crypto from 'crypto-js';\r\nexport default function InvitationCheck(props) \r\n{\r\n  const location = useLocation() \r\n  const history = useHistory();\r\n  const { projectID ,permissionID} = useParams();\r\n  function replaceAll(str, term, replacement) {\r\n    return str.replace(new RegExp(escapeRegExp(term), 'g'), replacement);\r\n  }\r\n  function escapeRegExp(string){\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n  } \r\n  React.useEffect(() => {\r\n    (async () => {\r\n      var  decryptPermissionID ;\r\n      //----------Decrypt Credentials-----\r\n      if(permissionID !=undefined)\r\n      {\r\n        const custom = replaceAll(permissionID,'$','/')\r\n        decryptPermissionID = Crypto.AES.decrypt(custom,\"grpthink12!\").toString(Crypto.enc.Utf8);\r\n        console.log(\"Permission ID DEcrypt\",decryptPermissionID,permissionID,custom)\r\n      }\r\n      const  checkInvite= await isChild(projectID,decryptPermissionID);\r\n      if(checkInvite)\r\n      {\r\n        history.push(`/project/${projectID}`)\r\n      }\r\n      else\r\n      {\r\n        history.push('/error',{from : location})\r\n      }\r\n    })()\r\n  }, [])\r\n  return(<div>\r\n      <Loading/>\r\n  </div>)\r\n} \r\n","import React from 'react';\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nexport default function ErrorsPage()\r\n{\r\n    const location =useLocation();\r\n    \r\n    return(\r\n        <div>\r\n            Invalid Link Enter :- \r\n            <br/>\r\n            {\r\n               location.state.from.pathname\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nconst InivitationRoute = ({path, children, isAuth, ...rest }) => {\r\n  console.log(path)\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          isAuth ? (\r\n            children\r\n          ) : (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  state: { from: location }\r\n                }}\r\n              />\r\n            )\r\n        }\r\n      />\r\n    );\r\n  \r\n}\r\nexport default InivitationRoute;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport SplashPage from \"../Pages/Splash/Splash\"\r\nimport LoginPage from \"../Pages/Login/Login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Dashboard from \"../Pages/Dashboard/Dashboard\";\r\nimport Document from \"../Pages/Document/Document\";\r\nimport { useAuth } from \"../services/auth\";\r\nimport InvitationCheck from \"../Pages/Document/InvitationCheck\";\r\nimport ErrorsPage from \"../Pages/Errors/ErrorsPage\";\r\nimport InivitationRoute from \"./InvitationRoute\";\r\n\r\nexport default function AppRoutes() {\r\n  const { auth, uiConfig, authState } = useAuth();\r\n  // console.log(\"authState\", authState.pendingAuth)\r\n  if(authState.pendingAuth){\r\n    return false;\r\n  }\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <InivitationRoute isAuth={authState.isSignedIn} path=\"/project/:projectID/:permissionID\">\r\n          <InvitationCheck/>  \r\n        </InivitationRoute>\r\n        <PrivateRoute isAuth={authState.isSignedIn} path=\"/project/:projectID\">\r\n          <Document\r\n            currentUser={() => auth().currentUser}\r\n            signOut={() => auth().signOut()} />\r\n        </PrivateRoute>\r\n        <Route path=\"/login\" >\r\n          <LoginPage auth={auth} uiConfig={uiConfig} authState={authState} />\r\n        </Route>\r\n        <PrivateRoute isAuth={authState.isSignedIn} path=\"/dashboard\">\r\n          <Dashboard\r\n            currentUser={() => auth().currentUser}\r\n            signOut={() => auth().signOut()} />\r\n        </PrivateRoute>\r\n        <Route path=\"/error\">\r\n          <ErrorsPage/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <SplashPage pendingAuth={authState.pendingAuth} isAuth={authState.isSignedIn} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n/**\r\n * <Route path=\"/project/:projectID\">\r\n   <Document />\r\n</Route>*/","import { useState, useEffect } from \"react\"\r\nimport { firebaseAuth } from \"./firebase\"\r\nimport { FIREBASE_CONSTANTS } from \"../constants/firebaseConstants\"\r\n\r\nexport function useAuth() {\r\n    const auth = firebaseAuth;\r\n    const uiConfig = FIREBASE_CONSTANTS.UI_CONFIG;\r\n    const [authState, setAuthState] = useState({\r\n        isSignedIn: false,\r\n        pendingAuth: true,\r\n        user: null,\r\n    });\r\n    useEffect(() => {\r\n        const unregisterAuthObserver = firebaseAuth().onAuthStateChanged(\r\n            user => {\r\n                setAuthState({ user, pendingAuth: false, isSignedIn: !!user });\r\n            }\r\n        )\r\n        return () => unregisterAuthObserver()\r\n    }, [])\r\n    return { auth, uiConfig, authState };\r\n}","import React from 'react'\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react';\r\nimport AppRoutes from './Router'\r\nimport AppContext from './contexts/AppContext';\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider value={{ appname: \"groupthink\" }}>\r\n        <AppRoutes />\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport * as serviceWorker from './Helpers/serviceWorker';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}